import com.jfrog.bintray.gradle.BintrayExtension
import com.jfrog.bintray.gradle.BintrayPlugin
import com.jfrog.bintray.gradle.tasks.BintrayUploadTask
import org.gradle.api.Plugin
import org.gradle.api.Project
import org.gradle.api.logging.Logger
import org.gradle.api.logging.Logging

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
      url  "https://dl.bintray.com/joon-example/buildtest"  
    }
  }
}

plugins {
  id "com.jfrog.bintray" version '1.8.1'
  id 'nebula.netflixoss' version '5.1.0'
}

allprojects {
  group = 'com.netflix.buildinfrastructure'
  apply plugin: LocalBintrayPublishPlugin
  apply plugin: 'maven-publish'
  
  repositories {
    jcenter()
  }

}

subprojects {
  apply plugin: 'nebula.netflixoss'
}

/**
 * Defaults for publishing the nebula-plugins on bintray
 */
class LocalBintrayPublishPlugin implements Plugin<Project> {
    private static Logger logger = Logging.getLogger(LocalBintrayPublishPlugin)

    protected Project project

    @Override
    void apply(Project project) {
        this.project = project

        def bintrayUpload = addBintray(project)
    }

    BintrayUploadTask addBintray(Project project) {
        //Test tasks
        HashSet<BintrayUploadTask> tasks = project.getTasksByName(BintrayUploadTask.TASK_NAME, true)
        for (BintrayUploadTask task : tasks) {
            System.out.println("Tasks : " + task.name())
        }
    
        // Bintray Side
        project.plugins.apply(BintrayPlugin)
        BintrayExtension bintray = project.extensions.getByType(BintrayExtension)
        if (project.hasProperty('bintrayUser')) {
            bintray.user = project.property('bintrayUser')
            bintray.key = project.property('bintrayKey')
        }
        bintray.publish = true
        bintray.publications = ['joonfrog']
        bintray.pkg {
            version {
                name = project.getVersion()
                vcsTag = "v${project.getVersion()}"
                gpg {
                    sign = true
                }
                if (project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
                    def sonatypeUsername = project.property('sonatypeUsername')
                    def sonatypePassword = project.property('sonatypePassword')
                    mavenCentralSync {
                        user = sonatypeUsername
                        password = sonatypePassword
                    }
                }
            }
            publicDownloadNumbers = true

            desc = project.hasProperty('description') ? project.description : ''
            name = project.name

            repo = 'buildtest'
            userOrg = 'joon-example'
            licenses = ['Apache-2.0']
            labels = ['gradle', 'joonfrog']
            websiteUrl = "https://github.com/joonfrog/${project.name}"
            issueTrackerUrl = "https://github.com/joonfrog/${project.name}/issues"
            vcsUrl = "https://github.com/joonfrog/${project.name}.git"
        }

        BintrayUploadTask bintrayUpload = (BintrayUploadTask) project.tasks.find { it instanceof BintrayUploadTask }
        bintrayUpload.group = 'publishing'

        bintrayUpload
    }
}
